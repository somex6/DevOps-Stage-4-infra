# - name: Update and upgrade apt packages
#   become: true
#   apt:
#     upgrade: yes
#     update_cache: yes
#     cache_valid_time: 86400 

# - name: Install prerequisites
#   apt:
#     name:
#       - ca-certificates
#       - curl
#       - gnupg
#     state: present
#     update_cache: yes

# - name: Create APT key directory
#   file:
#     path: /etc/apt/keyrings
#     state: directory
#     mode: 0755

# - name: Add Docker GPG key
#   get_url:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     dest: /etc/apt/keyrings/docker.asc
#     mode: 0644

# - name: Add Docker repository (Ubuntu-specific)
#   apt_repository:
#     repo: >-
#       deb [arch={{ ansible_architecture }} signed-by=/etc/apt/keyrings/docker.asc]
#       https://download.docker.com/linux/ubuntu
#       {{ ansible_lsb.codename }} edge
#     filename: docker.list
#     update_cache: yes

# - name: Explicitly update package cache
#   apt:
#     update_cache: yes
#     cache_valid_time: 3600

# # - name: Add Docker's official GPG key 
# #   ansible.builtin.apt_key:
# #     url: https://download.docker.com/linux/ubuntu/gpg
# #     state: present
# #   when: ansible_os_family == 'Debian'





# - name: Install Docker components
#   apt:
#     name:
#       - docker-ce
#       - docker-ce-cli
#       - containerd.io
#       - docker-buildx-plugin
#       - docker-compose-plugin
#       - docker-compose
#     state: present

# - name: Install prerequisites
#   apt:
#     name:
#       - ca-certificates
#       - curl
#       - gnupg
#       - software-properties-common
#     state: present
#     update_cache: yes

# - name: Create APT key directory
#   file:
#     path: /etc/apt/keyrings
#     state: directory
#     mode: 0755

# - name: Clean previous Docker configurations
#   include_tasks: clean-docker.yml  # Contains the cleanup block above

# - name: Add Docker GPG key
#   get_url:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     dest: /etc/apt/keyrings/docker.gpg
#     mode: 0644

# - name: Add Docker repository (with Noble workaround)
#   apt_repository:
#     repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ 'jammy' if ansible_distribution_release == 'noble' else ansible_distribution_release }} stable"
#     filename: docker
#     state: present
#     update_cache: yes

# - name: Install Docker components
#   apt:
#     name:
#       - docker-ce
#       - docker-ce-cli
#       - containerd.io
#       - docker-buildx-plugin
#       - docker-compose-plugin
#     state: present

# - name: Remove conflicting Docker configurations
#   block:
#     - name: Remove existing key files
#       file:
#         path: "{{ item }}"
#         state: absent
#       loop:
#         - /etc/apt/keyrings/docker.asc
#         - /etc/apt/keyrings/docker.gpg
#         - /etc/apt/trusted.gpg.d/docker.gpg

#     - name: Remove repository files
#       file:
#         path: "{{ item }}"
#         state: absent
#       loop:
#         - /etc/apt/sources.list.d/docker.list
#         - /etc/apt/sources.list.d/docker.list.save

#     - name: Clean package cache
#       apt:
#         update_cache: yes
#         cache_valid_time: 1
#   ignore_errors: yes

# - name: Update apt package index
#   apt:
#     update_cache: yes

# - name: Install required packages
#   apt:
#     name:
#       - ca-certificates
#       - curl
#     state: present

# - name: Create keyrings directory
#   file:
#     path: /etc/apt/keyrings
#     state: directory
#     mode: '0755'

# - name: Download Docker GPG key
#   get_url:
#     url: https://download.docker.com/linux/ubuntu/gpg
#     dest: /etc/apt/keyrings/docker.asc
#     mode: '0644'

# - name: Add Docker repository
#   shell: |
#     echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo \"${UBUNTU_CODENAME:-$VERSION_CODENAME}\") stable" > /etc/apt/sources.list.d/docker.list
#   args:
#     executable: /bin/bash

# - name: Update apt package index again
#   apt:
#     update_cache: yes
#     cache_valid_time: 3600
#   register: apt_update_result
#   retries: 3
#   delay: 5
#   until: apt_update_result is success
#   ignore_errors: "{{ ansible_check_mode }}"
#   become: yes

# - name: Install Docker components
#   apt:
#     name:
#       - docker-ce
#       - docker-ce-cli
#       - containerd.io
#       - docker-buildx-plugin
#       - docker-compose-plugin
#     state: present

# - name: Ensure Docker service is running
#   service:
#     name: docker
#     state: started
#     enabled: yes

# - name: Add current user to docker group
#   user:
#     name: "{{ ansible_user }}"
#     groups: docker
#     append: yes

# - name: Install required packages
#   apt:
#     name:
#       - ca-certificates
#       - curl
#       - gnupg
#       - lsb-release
#     state: present

# - name: Create keyrings directory
#   file:
#     path: /etc/apt/keyrings
#     state: directory
#     mode: '0755'

# - name: Download Docker GPG key using curl
#   shell: |
#     curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
#     chmod a+r /etc/apt/keyrings/docker.gpg
#   args:
#     creates: /etc/apt/keyrings/docker.gpg
#   register: gpg_result
  
# - name: Debug GPG key result
#   debug:
#     var: gpg_result

# - name: Detect Ubuntu release
#   shell: lsb_release -cs
#   register: ubuntu_release
#   changed_when: false

# - name: Debug detected Ubuntu release
#   debug:
#     var: ubuntu_release.stdout

# - name: Add Docker repository
#   shell: |
#     echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ubuntu_release.stdout }} stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
#   args:
#     executable: /bin/bash
#   register: repo_result

# - name: Debug repository addition
#   debug:
#     var: repo_result

# - name: Verify repository file exists
#   stat:
#     path: /etc/apt/sources.list.d/docker.list
#   register: repo_file

# - name: Show repository file contents
#   shell: cat /etc/apt/sources.list.d/docker.list
#   register: repo_contents
#   changed_when: false
#   when: repo_file.stat.exists

# - name: Debug repository file contents
#   debug:
#     var: repo_contents.stdout
#   when: repo_file.stat.exists

# - name: Update apt package index again
#   apt:
#     update_cache: yes
#   register: apt_update_result

# - name: Debug apt update result
#   debug:
#     var: apt_update_result

# - name: List available docker packages
#   shell: apt-cache madison docker-ce
#   register: available_packages
#   changed_when: false

# - name: Debug available Docker packages
#   debug:
#     var: available_packages.stdout_lines

- name: Update apt package index
  apt:
    update_cache: yes
  register: apt_update_result

- name: Install prerequisites
  apt:
    name:
      - ca-certificates
      - curl
    state: present

- name: Create keyrings directory with proper permissions
  file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Download Docker's official GPG key
  get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Ensure GPG key is readable
  file:
    path: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker repository
  shell: |
    echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  args:
    executable: /bin/bash

- name: Update apt package index again
  apt:
    update_cache: yes
  register: apt_update_result

- name: Install Docker components
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present